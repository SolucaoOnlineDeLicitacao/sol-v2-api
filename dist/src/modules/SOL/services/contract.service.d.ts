import { ContractRepository } from "../repositories/contract.repository";
import { ContractModel } from "../models/contract.model";
import { ContractRegisterDto } from "../dtos/contract-register-request.dto";
import { ContractUpdateDto } from "../dtos/contract-update-request.dto";
import { NotificationService } from "./notification.service";
import { FileRepository } from "../repositories/file.repository";
import { ProposalRepository } from "../repositories/proposal.repository";
import { ModelContractRepository } from "../repositories/model-contract.repository";
import { AssociationRepository } from "../repositories/association.repository";
import { UserRepository } from "../repositories/user.repository";
import { SupplierRepository } from "../repositories/supplier.repository";
import { text } from "aws-sdk/clients/customerprofiles";
import { ContractUpdateStatusItemDto } from "../dtos/contract-update-status-item-request.dto";
import { WorkPlanService } from "./work-plan.service";
import { CostItemsService } from "./cost-items.service";
import { ModelContractClassificationEnum } from "../enums/modelContract-classification.enum";
import { AgreementRepository } from "../repositories/agreement.repository";
export declare class ContractService {
    private readonly _contractRepository;
    private readonly _notificationService;
    private readonly _fileRepository;
    private readonly _proposalRepository;
    private readonly _modelContractRepository;
    private readonly _associationRepository;
    private readonly _userRepository;
    private readonly _workPlanService;
    private readonly _supplierRepository;
    private readonly _costItemsService;
    private readonly _agreementRepository;
    private readonly _logger;
    constructor(_contractRepository: ContractRepository, _notificationService: NotificationService, _fileRepository: FileRepository, _proposalRepository: ProposalRepository, _modelContractRepository: ModelContractRepository, _associationRepository: AssociationRepository, _userRepository: UserRepository, _workPlanService: WorkPlanService, _supplierRepository: SupplierRepository, _costItemsService: CostItemsService, _agreementRepository: AgreementRepository);
    register(dto: ContractRegisterDto): Promise<ContractModel>;
    list(): Promise<ContractModel[]>;
    listByUserId(_id: string): Promise<ContractModel[]>;
    updateStatus(_id: string, dto: ContractUpdateDto): Promise<ContractModel>;
    updateStatusItens(_id: string, dto: ContractUpdateStatusItemDto): Promise<ContractModel>;
    signAssociation(_id: string, dto: ContractUpdateDto): Promise<ContractModel>;
    signSupplier(_id: string, dto: ContractUpdateDto): Promise<ContractModel>;
    checkAllsignatures(_id: string): Promise<ContractModel>;
    contractPdfDownload(_id: string): Promise<text>;
    createDocument(_id: string, lang: string, type: ModelContractClassificationEnum): Promise<any>;
    getById(_id: string): Promise<ContractModel>;
    listByBidId(bid_id: string): Promise<ContractModel[]>;
    deleteById(_id: string): Promise<ContractModel & {
        _id: import("mongoose").Types.ObjectId;
    }>;
    private costItensGet;
    private callPythonFile;
}
